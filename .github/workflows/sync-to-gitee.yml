name: 同步代码到 Gitee
on:
  push:
    branches: [ master ]  # 同步的主分支
  workflow_dispatch:  # 支持手动触发

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      # 拉取GitHub代码（仅保留官方checkout Action，移除无效的自定义Action）
      - name: 拉取代码
        uses: actions/checkout@v4  # 注意：已更新到最新版本v4，更稳定
        with:
          fetch-depth: 0  # 拉取完整历史

      # 配置Gitee访问
      - name: 配置 SSH
        env:
          GITEE_SSH_KEY: ${{ secrets.GITEE_SSH_KEY }}
          GITEE_USER: ${{ secrets.GITEE_USERNAME }}
        run: |
          # 配置SSH
          mkdir -p ~/.ssh
          echo "$GITEE_SSH_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan gitee.com >> ~/.ssh/known_hosts
          
          # 配置Git
          git config --global user.name "Sync Bot"
          git config --global user.email "sync@example.com"

      # 同步到Gitee
      - name: 推送到Gitee
        env:
          GITEE_USER: ${{ secrets.GITEE_USERNAME }}
          REPO_OWNER: ${{ github.repository_owner }} # 格式：所有者（如 MopLand）
          FULL_REPO_PATH: ${{ github.repository }} # 格式：所有者/仓库名（如MopLand/Messager）
        run: |
          # 提取仓库名称
          REPO_NAME=$(echo "$FULL_REPO_PATH" | sed "s/^$REPO_OWNER\///")

          # 添加Gitee远程仓库（如果已存在则忽略错误）
          git remote add gitee git@gitee.com:${GITEE_USER}/${REPO_NAME}.git
          
          # 强制同步（确保Gitee与GitHub代码完全一致）
          git push gitee ${{ github.ref_name }}
